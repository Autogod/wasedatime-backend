name: AWS CDK CI/CD

# Controls when the action will run. 
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  GITHUB_OAUTH_TOKEN: ${{ secrets.ACCESS_TOKEN_GITHUB }}
  WEBSITE_DEV_PASS: ${{ secrets.WEBSITE_DEV_PASS }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  COGNITO_AFFILIATE_REGION: ${{ secrets.COGNITO_AFFILIATE_REGION }}
  GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
  GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
  GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
  GOOGLE_API_SERVICE_ACCOUNT_INFO: ${{ secrets.GOOGLE_API_SERVICE_ACCOUNT_INFO }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
  SLACK_WORKSPACE_ID: ${{ secrets.SLACK_WORKSPACE_ID }}
  BIT_TOKEN: ${{ secrets.BIT_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  STAGE: dev

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2.4.1
        with:
          node-version: 16.x

      - name: Configure pnpm
        run: npm install -g pnpm

      - name: Install
        run: pnpm install

      - name: Test
        run: pnpm test

      - name: Build
        run: pnpm run build

  verify:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2.4.1
        with:
          node-version: 16.x

      - name: Configure pnpm
        run: npm install -g pnpm

      - name: Setup CDK
        run: |
          pnpm install -g aws-cdk
          pnpm install
      - name: Diagnose
        run: pnpm run cdk doctor

      - name: Diff
        id: diff
        run: echo "::set-output name=diff::$(cdk diff --no-color)\n"

      - name: Comment
        uses: mshick/add-pr-comment@v1
        with:
          message: ${{ steps.diff.outputs.diff }}
          repo-token: ${{ secrets.GITHUB_OAUTH_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          allow-repeats: false
